#! /usr/bin/env bash

information() {
	echo "$1" >&2
}

status() {
	echo -n "$1" >&2
}

warning() {
	information "Warning: $1"
}

error() {
	information "$0: Error: $1"
}

error_exit() {
	error "$1"
	exit 1
}

usage_error() {
	usage
	error "$1"
	exit 1
}

clear_line() {
	echo -en "\e[2K\e[1G2"
}

replace_line() {
	echo -en "\e[2K\e[1G"
	echo -n "$1"
}

usage() {
	cat << EOF >&2
Usage:
    do-checkout [ -h | --help ]
    do-checkout <what> <how>

Where:
    <waht>: [ -t, --tags | -T, --no-tags ] [ -b, --branches | -B, --no-branches ]
    <how>: [ --folders [ none | tree | ref ] | -f | -F
    -t, --tags: Checkout all tags.
    -T, --no-tags: Do not checkout tags.
    -b, --branches: Checkout all branches.
    -B, --no-branches: Do not checkout branches.
    --folders none, -F:
        Each file in each checked-out tree is placed in the same directory.
    --folders tree:
        Each checked-out tree is placed it it's own directoy.
    --folder ref, -f: Subdirectories are created for each tag/branch component.
EOF
} #'

help() {
	usage
}

OPT_CHECKOUT_TAGS=1
OPT_CHECKOUT_BRANCHES=
OPT_FOLDERS=tree

while [ "${1:0:1}" == "-" ]; do
	if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
		help
		exit
	elif [ "$1" == "-t" ] || [ "$1" == "--tags" ]; then
		OPT_CHECKOUT_TAGS=1
	elif [ "$1" == "-T" ] || [ "$1" == "--no-tags" ]; then
		OPT_CHECKOUT_TAGS=
	elif [ "$1" == "-b" ] || [ "$1" == "--branches" ]; then
		OPT_CHECKOUT_BRANCHES=1
	elif [ "$1" == "-B" ] || [ "$1" == "--no-branches" ]; then
		OPT_CHECKOUT_BRANCHES=
	elif [ "$1" == "--folders" ]; then
		[ "$2" ] || usage_error "Option requires an argument: $1"
		[ "$2" == "none" ] || [ "$2" == "tree" ] || [ "$2" == "ref" ] || usage_error "$1: Argument must be one of: none, tree, ref"
		OPT_FOLDERS=$2
		shift
	elif [ "$1" == "-f" ]; then
		OPT_FOLDERS=ref
	elif [ "$1" == "-F" ]; then
		OPT_FOLDERS=none
	else
		usage_error "Unknown option: $1"
	fi
	shift
done

[ "$1" ] && usage_error "No arguments are required!"

[ "$OPT_CHECKOUT_TAGS" ] || [ "$OPT_CHECKOUT_BRANCHES" ] || error_exit "At least one of tags or branches must be checked out."

COUNT=$(COUNT=0; {
	[ "$OPT_CHECKOUT_TAGS" ] && git tag
	[ "$OPT_CHECKOUT_BRANCHES" ] && git branch | cut -c "3-"
} | grep -vF "do-checkout" | (while IFS= read i; do
	[ "$OPT_FOLDERS" == "none" ] && PREFIX="$(echo "$i" | sed -r "s/\//_/g")_"
	[ "$OPT_FOLDERS" == "tree" ] && PREFIX="$(echo "$i" | sed -r "s/\//_/g")/"
	[ "$OPT_FOLDERS" == "ref" ] && PREFIX="$i/"
	
	status "Checking out: $i ..."
	COUNT=$[ $COUNT + 1 ]
	
	git archive "--prefix=$PREFIX" "$i" | tar -x
	information
done; echo $COUNT))

information "$COUNT $([ $COUNT -eq 1 ] && echo "tag/branch" || echo "tags/branches") checked out."
